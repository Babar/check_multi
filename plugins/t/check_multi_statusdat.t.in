#! @PERL@ -w -I ..
#
# Process Tests via check_multi
# thanks to Ton Voon for his persistency on testing ;)
#

use strict;
use Test::More;
use NPTest;

my $t;

plan tests => 12;

my $result;
my $testopts="-s status_dat=status.dat -s dont_be_paranoid=1";

#-------------------------------------------------------------------------------
#--- service not found ---------------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi -x 'statusdat [ eins ] = host_not_there:service_not_there' $testopts",
);
is(
	$result->return_code, 
	3, 
	"check_multi skips unknown service in status.dat - RC3 - passed"
);
like(
	$result->output,
	'/UNKNOWN - 0 plugins checked,  \[Could not expand host:service host_not_there:service_not_there from status_dat.*/', 
	"output correct - passed"
);

#-------------------------------------------------------------------------------
#--- services all --------------------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi -x 'statusdat [ svc ] = /.*/:/.*/' $testopts",
);
is(
	$result->return_code, 
	$result->return_code, 
	"check_multi finds numerous services in status.dat - RC".$result->return_code." - passed"
);
like(
	$result->output,
	'/\d+ plugins checked.*\|check_multi\:\:check_multi\:\:plugins=\d+/s', 
	"services output correct - passed"
);

#-------------------------------------------------------------------------------
#--- service Total Processes ---------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi -x 'statusdat [ svc ] = localhost:Total Processes' $testopts",
);
is(
	$result->return_code, 
	$result->return_code, 
	"check_multi finds service in status.dat - RC".$result->return_code." - passed"
);
like(
	$result->output,
	'/OK - 1 plugins checked, 1 ok\n\[ 1\] svc_localhost_Total Processes PROCS OK.*/s', 
	"service output correct - passed"
);

#-------------------------------------------------------------------------------
#--- service Total Processes REGEX ---------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi -x 'statusdat [ svc ] = localhost:/Processes/' $testopts",
);
is(
	$result->return_code, 
	$result->return_code, 
	"check_multi finds service with REGEX in status.dat - RC".$result->return_code." - passed"
);
like(
	$result->output,
	'/OK - 1 plugins checked, 1 ok\n\[ 1\] svc_localhost_Total Processes PROCS OK.*/s', 
	"service output correct - passed"
);

#-------------------------------------------------------------------------------
#--- hosts all -----------------------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi -x 'statusdat [ host ] = /.*/' $testopts",
);
is(
	$result->return_code, 
	$result->return_code, 
	"check_multi finds numerous hosts in status.dat - RC".$result->return_code." - passed"
);
like(
	$result->output,
	'/\d+ plugins checked.*\|check_multi\:\:check_multi\:\:plugins=\d+/s', 
	"hosts output correct - passed"
);

#-------------------------------------------------------------------------------
#--- host localhost ------------------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi -x 'statusdat [ host ] = localhost' $testopts",
);
is(
	$result->return_code, 
	$result->return_code, 
	"check_multi finds localhost in status.dat - RC".$result->return_code." - passed"
);
like(
	$result->output,
	#'/OK - 1 plugins checked, 1 ok\n\[ 1\] test_localhost.*PING OK.*\|check_multi\:\:check_multi\:\:plugins=1/s', 
	'/OK - 1 plugins checked, 1 ok\n\[ 1\] host_localhost PING OK.*/s', 
	"hosts output correct - passed"
);
