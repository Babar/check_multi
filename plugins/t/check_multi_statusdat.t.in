#! @PERL@ -w -I ..
#
# Process Tests via check_multi
# thanks to Ton Voon for his persistency on testing ;)
#

use strict;
use Test::More;
use NPTest;

my $t;

#--- add $libexec_dir to PATH to be sure that plugins will be called from libexec_dir
my $libexec_dir="@libexecdir@";
$ENV{PATH}="$libexec_dir:$ENV{PATH}";

#--- check needed plugins for tests
my @plugins=(
	"check_procs",
	"echo",
	"@PERL@",
);
foreach my $plugin (@plugins) {
	my $path_to_plugin=`which $plugin`; chomp $path_to_plugin;
	if (! -x "$path_to_plugin") {
		plan skip_all => "tests because component $plugin not found or not executable as \'$path_to_plugin\'";
	}
	if (! -r "@localstatedir@/status.dat") {
		plan skip_all => "tests because status.dat \'@localstatedir@/status.dat\' not found or not readable - is Nagios running?";
	}
}
plan tests => 2;

my $result;
my $testopts="-s dont_be_paranoid=1";

#-------------------------------------------------------------------------------
#--- service not found ---------------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi -x 'statusdat [ eins ] = host_not_there:service_not_there' $testopts",
);
is(
	$result->return_code, 
	3, 
	"check_multi skips unknown service in status.dat - RC3 - passed"
);
like(
	$result->output,
	'/UNKNOWN - 0 plugins checked,  \[Could not expand host:service host_not_there:service_not_there from status_dat.*/', 
	"output correct - passed"
);
