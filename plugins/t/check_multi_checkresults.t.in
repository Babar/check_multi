#! @PERL@ -w -I ..
#
# Process Tests via check_multi
# thanks to Ton Voon for his persistency on testing ;)
#

use strict;
use Test::More;
use NPTest;

my $t;

#--- add $libexec_dir to PATH to be sure that plugins will be called from libexec_dir
my $libexec_dir="@libexecdir@";
$ENV{PATH}="$libexec_dir:$ENV{PATH}";

#--- check needed plugins for tests
my @plugins=(
	"check_procs",
	"echo",
	"@PERL@",
);
foreach my $plugin (@plugins) {
	my $path_to_plugin=`which $plugin`; chomp $path_to_plugin;
	if (! -x "$path_to_plugin") {
		plan skip_all => "tests because component $plugin not found or not executable as \'$path_to_plugin\'";
	}
}
my $test_dir="/tmp/check_multi_checkresults_test_$$";
if (-d $test_dir) {
	plan skip_all => "tests because tmp dir $test_dir already exists";
} else {
	mkdir $test_dir;
	if (!-d $test_dir) {
		plan skip_all => "tests because tmp dir $test_dir could not be created:$!";
	}
}
plan tests => 3;

my $result;
my $testopts="-s dont_be_paranoid=1";

#-------------------------------------------------------------------------------
#--- content of checkresults file-----------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi -x 'command [ procs ] = check_procs' $testopts -s checkresults_dir=$test_dir -r 8192",
);
is(
	$result->return_code, 
	0, 
	"check_multi checkresults output - RC0 - passed"
);
like(
	$result->output,
	'/PROCS .*: \d+/', 
	"output of check_command correct - passed"
);
my @result_file=glob <$test_dir/???????>;
my @contents=();
if ($result_file[0]=~/\S{6}/) { 
	if (open(RESULTFILE, "$result_file[0]")) {
		@contents=<RESULTFILE>;
		close RESULTFILE;
	} else {
		fail "open result file $result_file[0] for reading failed:$!";
	}
}
like(
	join(' ',@contents),
	'/child check result.*finish_time=1.*host_name=\S+.*service_description=procs.*output=PROCS/s', 
	"output of checkresults file correct - passed"
);
foreach my $file (@result_file) {
	`rm -f $file`;
	`rm -f $file.ok`;
}
`rmdir $test_dir`;
